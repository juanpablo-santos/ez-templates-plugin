<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:f="/lib/form">
  <f:optionalBlock name="useTemplate" field="useTemplate" title="${%Use another job as a template}"
                   checked="${instance != null}" inline="true">

    <f:entry field="templateJobName" title="${%Name of template}">
      <f:select/>
      <f:description>
        <j:if test="${instance.templateJobName != null}">
          <j:set var="template" value="${instance.findTemplate()}"/>
          <j:if test="${template != null}">
            ${%Currently based on}:
            <a href="${rootURL}/${template.url}">${template.fullDisplayName}</a>
          </j:if>
        </j:if>
      </f:description>
    </f:entry>

    <f:advanced>
      <f:entry>
        Features exempted from templating:
        <j:set var="selections" value="${instance==null?descriptor.defaultExclusions:instance.exclusions}"/>
        <f:invisibleEntry>
          <!-- force ez-templates into the exclusion list -->
          <div style="display: none;">
            <f:checkbox title="${e.description}" name="exclusions" default="true"
                        json="ez-templates"/>
          </div>
        </f:invisibleEntry>
        <j:forEach var="e" items="${descriptor.exclusionDefinitions}">
          <j:choose>
            <j:when test="${e.disabledText != null}">
              <f:entry title="${e.id}">
                <!-- workaround for a disabled f:checkbox -->
                <input type="checkbox" disabled="disabled" />
                ${e.description}
              </f:entry>
            </j:when>
            <j:otherwise>
              <f:entry title="${e.id}">
                <f:checkbox title="${e.description}" name="exclusions" default="${selections.contains(e.id)}"
                            json="${e.id}"/>
              </f:entry>
            </j:otherwise>
          </j:choose>
        </j:forEach>
      </f:entry>
    </f:advanced>

  </f:optionalBlock>
</j:jelly>
